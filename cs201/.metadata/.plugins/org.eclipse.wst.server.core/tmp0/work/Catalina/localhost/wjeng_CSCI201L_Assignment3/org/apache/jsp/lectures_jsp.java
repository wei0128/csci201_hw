/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2017-11-15 06:42:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import objects.*;
import java.util.List;
import java.util.ArrayList;

public final class lectures_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("objects");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=BIG5");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Collection myCollection = (Collection)session.getAttribute("Schools");
	//Setting up some basic variable and names
	if(myCollection == null){
		response.sendRedirect("index.jsp");
		return;
	}
	List<School> schools = myCollection.getSchools();
	//Hard code the only school and Departmnet and Class
	School  mySchool = schools.get(0);
	Departments myDepartment = mySchool.getDepartments().get(0);
	Courses myCourse = myDepartment.getCourses().get(0);
	
	String style = (String)session.getAttribute("style");


      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=BIG5\">\r\n");
      out.write("\t\t<title>");
      out.print( mySchool.getName() + ": " + myDepartment.getPrefix() + " " + myCourse.getNumber() + " " +
		myCourse.getTerm() + " " + myCourse.getYear());
      out.write("</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=");
      out.print(style );
      out.write(" />\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tfunction handleSelection(){\r\n");
      out.write("\t\t\t\t//get all selection and check whcih one is selected\r\n");
      out.write("\t\t\t\tvar radios = document.getElementsByName('selection');\r\n");
      out.write("\t\t\t\tvar displayType = \"\";\r\n");
      out.write("\t\t\t\tfor(var i = 0; i<radios.length; i++){\r\n");
      out.write("\t\t\t\t\tif(radios[i].checked){\r\n");
      out.write("\t\t\t\t\t\tdisplayType = radios[i].value;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(displayType === \"dueDates\"){\r\n");
      out.write("\t\t\t\t\tvar buttons = document.getElementsByName('searchButton');\r\n");
      out.write("\t\t\t\t\tfor(var i = 0; i < buttons.length; i++){\r\n");
      out.write("\t\t\t\t\t\tbuttons[i].disabled = true;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\tvar buttons = document.getElementsByName('searchButton');\r\n");
      out.write("\t\t\t\t\tfor(var i = 0; i < buttons.length; i++){\r\n");
      out.write("\t\t\t\t\t\tbuttons[i].disabled = false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//Send data to lectureFilter page through ajax\r\n");
      out.write("\t\t\t\tvar xhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t\t\txhttp.open(\"GET\", \"lectureFilter.jsp?displayType=\"+displayType, false);\r\n");
      out.write("\t\t\t\txhttp.send();\r\n");
      out.write("\t\t\t\tvar filtered = xhttp.responseText;\r\n");
      out.write("\t\t\t\tif(filtered.trim() === \"expired\"){\r\n");
      out.write("\t\t\t\t\twindow.location = \"index.jsp\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"lectureBody\").innerHTML = filtered;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfunction searchTopic(){\r\n");
      out.write("\t\t\t\tresetSearch();\r\n");
      out.write("\t\t\t\tvar term = document.searchForm.searchTerm.value;\r\n");
      out.write("\t\t\t\tterm = term.toLowerCase();\r\n");
      out.write("\t\t\t\tvar xhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t\t\txhttp.open(\"GET\", \"searchTopic.jsp?term=\"+term, false);\r\n");
      out.write("\t\t\t\txhttp.send();\r\n");
      out.write("\t\t\t\tvar matchString = xhttp.responseText.trim();\r\n");
      out.write("\t\t\t\tvar fix = matchString.substring(0,matchString.length -1);\r\n");
      out.write("\t\t\t\tvar matchList = fix.split(\",\");\r\n");
      out.write("\t\t\t\tfor(var i = 0; i < matchList.length; i++){\r\n");
      out.write("\t\t\t\t\tvar name = matchList[i];\r\n");
      out.write("\t\t\t\t\tvar classList = document.getElementsByClassName(name);\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor(var k = 0; k< classList.length; k++){\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tclassList[k].style.backgroundColor = \"red\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfunction resetSearch(){\r\n");
      out.write("\t\t\t\tvar allClass = document.getElementsByTagName(\"*\");\r\n");
      out.write("\t\t\t\tvar classNames = [];\r\n");
      out.write("\t\t\t\tfor(var i = 0; i < allClass.length; i++){\r\n");
      out.write("\t\t\t\t\tif(allClass[i].className!==''){\r\n");
      out.write("\t\t\t\t\t\tclassNames.push(allClass[i]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tfor(var i = 0; i < classNames.length; i++){\r\n");
      out.write("\t\t\t\t\tvar classElements = document.getElementsByClassName(classNames[i].className)\r\n");
      out.write("\t\t\t\t\tfor(var k = 0; k < classElements.length; k++){\r\n");
      out.write("\t\t\t\t\t\tif(classElements[k].style.background ===\"red\"){\r\n");
      out.write("\t\t\t\t\t\t\tclassElements[k].style.backgroundColor = \"transparent\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body text=\"#333333\" bgcolor=\"#EEEEEE\" link=\"#0000EE\" vlink=\"#551A8B\" alink=\"#336633\">\r\n");
      out.write("\t\t<table cellpadding=\"10\" width=\"800\">\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<!--  left column for navigation -->\r\n");
      out.write("\t\t\t\t\t<td class=\"nav\" width=\"180\" valign=\"top\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"sidebar\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"http://www.usc.edu\"><img class=\"pic\" src=");
      out.print(mySchool.getImage());
      out.write(" border=\"0\"></a><br /><br />\r\n");
      out.write("\t\t\t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=\"http://cs.usc.edu\">CS Department</a></font><br /><br /></div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=\"home.jsp\">");
      out.print(myDepartment.getPrefix()+myCourse.getNumber());
      out.write(" Home</a></font><br /><br /></div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=");
      out.print(myCourse.getSyllabus().getUrl());
      out.write(">Syllabus</a></font><br /><br /></div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"navCont\"><font size=\"+1\">Lectures</font><br /><br /></div>\r\n");
      out.write("          \t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=\"assignments.jsp\">Assignments</a></font><br /><br /></div>\r\n");
      out.write("          \t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=\"exam.jsp\">Previous Exams</a></font><br /><br /></div>\r\n");
      out.write("          \t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<!--  breaking column -->\r\n");
      out.write("\t\t\t\t\t<td width=\"5\"><br /></td>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- center large -->\r\n");
      out.write("\t\t\t\t\t<td class=\"body\" align=\"baseline\" width=\"615\">\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t           <b><font size=\"+3\">");
      out.print( myDepartment.getPrefix() + " " + myCourse.getNumber());
      out.write("</font></b><br />\r\n");
      out.write("\t\t\t\t           <b><i><font size=\"+1\">");
      out.print( myCourse.getTitle());
      out.write("</font></i></b><br />\r\n");
      out.write("\t\t\t\t           <b><i><font size=\"+1\">");
      out.print( myCourse.getTerm() + " " + myCourse.getYear() );
      out.write("</font></i></b><br />\r\n");
      out.write("\t\t\t\t         <p><hr size=\"4\"/></p>\r\n");
      out.write("\t\t\t\t         \t<!-- Grabbing Schedule -->\r\n");
      out.write("\t\t\t\t         \t");

				         		Schedule mySchedule = myCourse.getSchedule();
				         		TextBooks myText = mySchedule.getTextbooks().get(0);
				         	
      out.write("\r\n");
      out.write("\t\t\t\t         \t<div id=\"book\">\r\n");
      out.write("\t\t\t\t         \t<b>Chapter references are from ");
      out.print( myText.getAuthor() + ". ");
      out.write('<');
      out.write('u');
      out.write('>');
      out.print( myText.getTitle()+", ");
      out.write("</u>");
      out.print( myText.getPublisher()+", "+myText.getYear()+". "+myText.getIsbn());
      out.write("</b>\r\n");
      out.write("\t\t\t\t         \t</div>\r\n");
      out.write("\t\t\t\t         \t<p><hr size=\"4\"></p>\r\n");
      out.write("\t\t\t\t         \t\r\n");
      out.write("\t\t\t\t         \t<!-- Search  -->\r\n");
      out.write("\t\t\t\t          <form name = \"searchForm\">\r\n");
      out.write("\t\t\t\t\t          <input type=\"text\" name=\"searchTerm\">\r\n");
      out.write("\t\t\t\t\t          <button class=\"buttons\" name =\"searchButton\" type=\"button\" onclick=\"searchTopic();\">Search Topics</button>\r\n");
      out.write("\t\t\t\t\t          <button class=\"buttons\" name = \"searchButton\" type=\"reset\" onclick=\"resetSearch();\">Clear Search</button>\r\n");
      out.write("\t\t\t\t          </form>\r\n");
      out.write("\t\t\t\t          \r\n");
      out.write("\t\t\t\t          <p><hr size=\"4\"/>\r\n");
      out.write("\t\t\t\t          <!-- End of Search -->\r\n");
      out.write("\t\t\t\t         \t\r\n");
      out.write("\t\t\t\t         \t<!-- Display selection -->\r\n");
      out.write("\t\t\t\t         \t<input  type=\"radio\" name=\"selection\" value=\"lectures\" onclick=\"handleSelection();\">Show Lectures\r\n");
      out.write("\t\t\t\t         \t<input type=\"radio\" name=\"selection\" value=\"dueDates\" onclick=\"handleSelection();\">Show Due Dates\r\n");
      out.write("\t\t\t\t         \t<input type=\"radio\" name=\"selection\" value=\"all\" onclick=\"handleSelection();\" checked>Show All </b>\r\n");
      out.write("\t\t\t\t         \t<p><hr size=\"4\"></p>\r\n");
      out.write("\t\t\t\t         \t\r\n");
      out.write("\t\t\t\t         \t<div id=\"lectureBody\">\r\n");
      out.write("\t\t\t\t         \t<b>Lectures</b>\r\n");
      out.write("\t\t\t\t         \t<table border=\"2\" cellpadding=\"5\" width=\"590\">\r\n");
      out.write("\t\t\t\t         \t\t<tr>\r\n");
      out.write("\t\t\t\t         \t\t\t<th align=\"center\">Week #</th>\r\n");
      out.write("\t\t\t\t         \t\t\t<th align=\"center\">Lab</th>\r\n");
      out.write("\t\t\t\t         \t\t\t<th align=\"center\">Lecture #</th>\r\n");
      out.write("\t\t\t\t         \t\t\t<th align=\"center\">Day</th>\r\n");
      out.write("\t\t\t\t         \t\t\t<th align=\"center\">Date</th>\r\n");
      out.write("\t\t\t\t         \t\t\t<th align=\"center\">Lecture Topic</th>\r\n");
      out.write("\t\t\t\t         \t\t\t<th align=\"center\">Chapter</th>\r\n");
      out.write("\t\t\t\t         \t\t\t<th align=\"center\">Program</th>\r\n");
      out.write("\t\t\t         \t\t\t</tr>\r\n");
      out.write("\t\t\t         \t\t\t\r\n");
      out.write("\t\t\t         \t\t\t\t<!-- Getting week list -->\r\n");
      out.write("\t\t\t         \t\t\t");

			         				List<Week> weekList = mySchedule.getWeeks();
			         				for(int i = 0; i < weekList.size(); i++){
			         					List<Lab> labList = weekList.get(i).getLabs();
			         					List<Lecture> lectureList = weekList.get(i).getLectures();
			         					List<Assignment> assignmentList = myCourse.getAssignments();
										List<Deliverable> deliverableList = new ArrayList<Deliverable>();
										//For row span count
										List<Assignment> dueAssignment = new ArrayList<Assignment>();
										List<Deliverable> dueDeliverable = new ArrayList<Deliverable>();
										List<Assignment> finalProject = new ArrayList<Assignment>();
										//getting final project
										for(int l = 0; l < assignmentList.size(); l++){
						         			if(assignmentList.get(l).getNumber().length() > 1){
						         				finalProject.add(assignmentList.get(l));
					         				} 
										}
										
										//Getting assignment due for the week
										for(int n = 0; n < lectureList.size(); n++){
											for(int m = 0; m < assignmentList.size(); m++){
												if(!assignmentList.get(m).getNumber().equals("Final Project")){
													if(assignmentList.get(m).getDueDate()!=null){
														if(assignmentList.get(m).getDueDate().equals(lectureList.get(n).getDate())){
															dueAssignment.add(assignmentList.get(m));
														}
													}													
												}
												
											}
											for(int m = 0; m<finalProject.size(); m++){
												deliverableList = finalProject.get(m).getDeliverables();
												for(int k=0; k<deliverableList.size(); k++){
													if(deliverableList.get(k).getDueDate()!=null){
														if(deliverableList.get(k).getDueDate().equals(lectureList.get(n).getDate())){
															dueDeliverable.add(deliverableList.get(k));
														}
													}													
												}
											}
										}
										
										
			         					
			         					
      out.write("\r\n");
      out.write("\t\t\t         \t\t\t\t\t<tr>\t\t\t         \t\t\t\t\t\t\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t<td align=\"center\" rowspan=");
      out.print( lectureList.size() + dueDeliverable.size()+dueAssignment.size());
      out.write('>');
      out.print( weekList.get(i).getWeek() );
      out.write("</td>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t<td align=\"center\" rowspan=");
      out.print( lectureList.size() + dueDeliverable.size()+dueAssignment.size());
      out.write(">\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t<!-- Starting Lab column -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t");

			         								
			         								if(labList!=null){
			         									for(int j = 0; j< labList.size(); j++){
				         									if(j!=labList.size()-1){
				         										
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( labList.get(j).getUrl());
      out.write('>');
      out.print( labList.get(j).getTitle());
      out.write("</a><hr />\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t");

				         									}
				         									else{
				         										
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( labList.get(j).getUrl());
      out.write('>');
      out.print( labList.get(j).getTitle() );
      out.write("</a>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t");

				         									}
				         								}			
			         								}
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t<!-- End Lab -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t<!-- Start of Lecture # -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t<!-- Grab Lecture List -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t");

			         							
			         							if(lectureList!=null){
			         								for(int j = 0; j < lectureList.size(); j++){
				         								if(j==0){
				         									
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( lectureList.get(j).getNumber() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( lectureList.get(j).getDay() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( lectureList.get(j).getDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- Getting Lecture Topics -->\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t");

				         											List<Topic> topicList = lectureList.get(j).getTopics();
				         											//Gettign File list to print
				         											List<File> fileList = new ArrayList<File>();
				         											if(topicList!=null){
				         												for(int k=0; k<topicList.size(); k++){
				         													if(k!=topicList.size()-1){
				         														
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"");
      out.print(topicList.get(k).getTitle().toLowerCase() );
      out.write("\">\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( topicList.get(k).getUrl());
      out.write('>');
      out.print( topicList.get(k).getTitle() );
      out.write("</a><hr />\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t");

				         													}
				         													else{
				         														
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"");
      out.print(topicList.get(k).getTitle().toLowerCase() );
      out.write("\">\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( topicList.get(k).getUrl());
      out.write('>');
      out.print( topicList.get(k).getTitle() );
      out.write("</a>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t");

				         													}
				         													List<Program> topicProgram = topicList.get(k).getPrograms();
				         													if(topicProgram != null){
				         														for(int l = 0; l<topicProgram.size();l++){
				         															List<File> programFiles = topicProgram.get(l).getFiles();
				         															if(programFiles!=null){
				         																for(int z = 0; z< programFiles.size(); z++){
				         																	fileList.add(programFiles.get(z));
				         																}
				         															}
				         														}
				         													}
				         													
				         												}
				         											}
				         											
				         										
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- Chapter -->\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- Combining chapter to a list -->\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t");
 
				         											String chapters = "";
				         											if(topicList!=null){
				         												for(int k=0; k < topicList.size();k++){
				         													if(k!=topicList.size()-1){
				         														if(topicList.get(k).getChapter()!=null){
						         													chapters += topicList.get(k).getChapter() + ", ";
						         												}
				         													}
				         													else{
				         														if(topicList.get(k).getChapter()!=null){
				         															chapters += topicList.get(k).getChapter() + ".";
				         														}
				         													}
					         												
					         											}
				         											}				         											
				         										
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t");
      out.print( chapters);
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- Program -->\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t");

				         											for(int m = 0; m < fileList.size(); m++){
				         												if(m!=fileList.size()-1){
				         													
      out.write("\r\n");
      out.write("\t\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( fileList.get(m).getUrl() );
      out.write('>');
      out.print( fileList.get(m).getTitle() );
      out.write("</a><br />\r\n");
      out.write("\t\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t");

				         												}
				         												else{
				         													
      out.write("\r\n");
      out.write("\t\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( fileList.get(m).getUrl() );
      out.write('>');
      out.print( fileList.get(m).getTitle() );
      out.write("</a>\r\n");
      out.write("\t\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t");

				         												}	
				         											}
				         										
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- End Program -->\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t");

				         								}
				         								else{
				         									
      out.write("<tr>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( lectureList.get(j).getNumber() );
      out.write("</td>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( lectureList.get(j).getDay() );
      out.write("</td>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( lectureList.get(j).getDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- Getting Lecture Topics -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t");

			         											List<Topic> topicList = lectureList.get(j).getTopics();
			         											//Gettign File list to print
			         											List<File> fileList = new ArrayList<File>();
			         											if(topicList!=null){
			         												for(int k=0; k<topicList.size(); k++){
			         													if(k!=topicList.size()-1){
			         														
      out.write("\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( topicList.get(k).getUrl());
      out.write('>');
      out.print( topicList.get(k).getTitle() );
      out.write("</a><hr />\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t");

			         													}
			         													else{
			         														
      out.write("\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( topicList.get(k).getUrl());
      out.write('>');
      out.print( topicList.get(k).getTitle() );
      out.write("</a>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t");

			         													}
			         													List<Program> topicProgram = topicList.get(k).getPrograms();
			         													if(topicProgram != null){
			         														for(int l = 0; l<topicProgram.size();l++){
			         															List<File> programFiles = topicProgram.get(l).getFiles();
			         															if(programFiles!=null){
			         																for(int z = 0; z< programFiles.size(); z++){
			         																	fileList.add(programFiles.get(z));
			         																}
			         															}
			         														}
			         													}
			         													
			         												}
			         											}
			         											
			         										
      out.write("\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- Chapter -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- Combining chapter to a list -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t");
 
			         											String chapters = "";
			         											if(topicList!=null){
			         												for(int k=0; k < topicList.size();k++){
			         													if(k!=topicList.size()-1){
			         														if(topicList.get(k).getChapter()!=null){
					         													chapters += topicList.get(k).getChapter() + ", ";
					         												}
			         													}
			         													else{
			         														if(topicList.get(k).getChapter()!=null){
			         															chapters += topicList.get(k).getChapter() + ".";
			         														}
			         													}
				         												
				         											}
			         											}				         											
			         										
      out.write("\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t");
      out.print( chapters);
      out.write("\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- Program -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t");

			         											for(int m = 0; m < fileList.size(); m++){
			         												if(m!=fileList.size()-1){
			         													
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( fileList.get(m).getUrl() );
      out.write('>');
      out.print( fileList.get(m).getTitle() );
      out.write("</a><br />\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t");

			         												}
			         												else{
			         													
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t<a href=");
      out.print( fileList.get(m).getUrl() );
      out.write('>');
      out.print( fileList.get(m).getTitle() );
      out.write("</a>\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t\t\t\t\t");

			         												}	
			         											}
			         										
      out.write("\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t<!-- End Program -->\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t         \t\t\t\t\t\t\t\t\t");

				         								}
				         								
      out.write("\r\n");
      out.write("\t\t\t\t         \t\t\t\t\t\t\t\t<!-- Check For Assignment -->\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t");

		         										for(int n = 0; n<dueAssignment.size(); n++){
		         											if(dueAssignment.get(n).getDueDate().equals(lectureList.get(j).getDate())){
		         												
      out.write("\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\"></td>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( lectureList.get(j).getDay() );
      out.write("</td>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( dueAssignment.get(n).getDueDate() );
      out.write("</td>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\" colspan=\"3\"><font size=\"+1\" color=\"red\"><b>ASSIGNMENT ");
      out.print( dueAssignment.get(n).getNumber());
      out.write(" DUE</b></font></td>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t");

		         											}
		         										}
		         										for(int n = 0; n < dueDeliverable.size(); n++){
		         											if(dueDeliverable.get(n).getDueDate().equals(lectureList.get(j).getDate())){
		         												
		         												
      out.write("\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\"></td>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( lectureList.get(j).getDay() );
      out.write("</td>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( dueDeliverable.get(n).getDueDate() );
      out.write("</td>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\" colspan=\"3\"><font size=\"+1\" color=\"red\"><b>FP - ");
      out.print( dueDeliverable.get(n).getTitle());
      out.write(" DUE</b></font></td>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t         \t\t\t\t\t\t\t\t\t\t\t\t");

		         											}
		         										}
				         							}				         						
			         							} 			         									         				
			         				}
			         			
      out.write("\r\n");
      out.write("\t\t\t\t         \t</table>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t    </td>\r\n");
      out.write("\t\t\t\t    <!--  End of Center -->\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
