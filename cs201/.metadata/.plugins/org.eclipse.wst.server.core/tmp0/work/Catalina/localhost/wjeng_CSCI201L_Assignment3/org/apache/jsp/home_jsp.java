/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2017-11-15 06:42:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import objects.*;
import java.util.List;
import java.util.ArrayList;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("objects");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=BIG5");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Collection myCollection = (Collection)session.getAttribute("Schools");
	if(myCollection == null){
		response.sendRedirect("index.jsp");
		return;
	}
	//Setting up some basic variable and names
	List<School> schools = myCollection.getSchools();
	//Hard code the only school and Departmnet and Class
	School  mySchool = schools.get(0);
	Departments myDepartment = mySchool.getDepartments().get(0);
	Courses myCourse = myDepartment.getCourses().get(0);

	String style = (String)session.getAttribute("style");


      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=BIG5\">\r\n");
      out.write("\t\t<title>");
      out.print( mySchool.getName() + ": " + myDepartment.getPrefix() + " " + myCourse.getNumber() + " " +
		myCourse.getTerm() + " " + myCourse.getYear());
      out.write("</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=");
      out.print(style );
      out.write(" />\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\t//Make all staff with matching name to have highlighted background\r\n");
      out.write("\t\t\tfunction searchStaff(){\r\n");
      out.write("\t\t\t\tresetSearch();\r\n");
      out.write("\t\t\t\tvar term = document.searchForm.searchTerm.value;\r\n");
      out.write("\t\t\t\tterm = term.toLowerCase();\r\n");
      out.write("\t\t\t\tvar xhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t\t\txhttp.open(\"GET\", \"staffSearch.jsp?term=\"+term, false);\r\n");
      out.write("\t\t\t\txhttp.send();\r\n");
      out.write("\t\t\t\tvar matchString = xhttp.responseText.trim();\r\n");
      out.write("\t\t\t\tvar fix = matchString.substring(0,matchString.length -1);\r\n");
      out.write("\t\t\t\tvar matchList = fix.split(\",\");\r\n");
      out.write("\t\t\t\tfor(var i = 0; i < matchList.length; i++){\r\n");
      out.write("\t\t\t\t\tvar name = matchList[i];\r\n");
      out.write("\t\t\t\t\tvar classList = document.getElementsByClassName(name);\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor(var k = 0; k< classList.length; k++){\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tclassList[k].style.backgroundColor = \"red\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//No input\r\n");
      out.write("\t\t\t//Reset the backgroundcolor of all class\r\n");
      out.write("\t\t\tfunction resetSearch(){\r\n");
      out.write("\t\t\t\tvar allClass = document.getElementsByTagName(\"*\");\r\n");
      out.write("\t\t\t\tvar classNames = [];\r\n");
      out.write("\t\t\t\tfor(var i = 0; i < allClass.length; i++){\r\n");
      out.write("\t\t\t\t\tif(allClass[i].className!==''){\r\n");
      out.write("\t\t\t\t\t\tclassNames.push(allClass[i]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tfor(var i = 0; i < classNames.length; i++){\r\n");
      out.write("\t\t\t\t\tvar classElements = document.getElementsByClassName(classNames[i].className)\r\n");
      out.write("\t\t\t\t\tfor(var k = 0; k < classElements.length; k++){\r\n");
      out.write("\t\t\t\t\t\tif(classElements[k].style.backgroundColor === \"red\"){\r\n");
      out.write("\t\t\t\t\t\t\tclassElements[k].style.backgroundColor = \"transparent\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body text=\"#333333\" bgcolor=\"#EEEEEE\" link=\"#0000EE\" vlink=\"#551A8B\" alink=\"#336633\">\r\n");
      out.write("\t\t<table cellpadding=\"10\" width=\"800\">\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<!--  left column for navigation -->\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<td class = \"nav\" width=\"180\" valign=\"top\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"sidebar\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"http://www.usc.edu\"><img class=\"pic\" src=");
      out.print(mySchool.getImage());
      out.write(" border=\"0\"></a><br /><br />\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=\"http://cs.usc.edu\">CS Department</a></font><br /><br /></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"navCont\"><font size=\"+1\">");
      out.print(myDepartment.getPrefix()+myCourse.getNumber());
      out.write(" Home</font><br /><br /></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=");
      out.print(myCourse.getSyllabus().getUrl());
      out.write(">Syllabus</a></font><br /><br /></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=\"lectures.jsp\">Lectures</a></font><br /><br /></div>\r\n");
      out.write("\t          \t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=\"assignments.jsp\">Assignments</a></font><br /><br /></div>\r\n");
      out.write("\t          \t\t\t\t<div class=\"navCont\"><font size=\"+1\"><a href=\"exam.jsp\">Previous Exams</a></font><br /><br /></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<!--  breaking column -->\r\n");
      out.write("\t\t\t\t\t<td width=\"5\"><br /></td>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- center large -->\r\n");
      out.write("\t\t\t\t\t<td class=\"body\" align=\"baseline\" width=\"615\">\r\n");
      out.write("\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t            <b><font size=\"+3\">");
      out.print( myDepartment.getPrefix() + " " + myCourse.getNumber());
      out.write("</font></b><br />\r\n");
      out.write("\t\t\t\t            <b><i><font size=\"+1\">");
      out.print( myCourse.getTitle() + " - " + myCourse.getUnits() + " units" );
      out.write("</font></i></b><br />\r\n");
      out.write("\t\t\t\t            <b><i><font size=\"+1\">");
      out.print( myCourse.getTerm() + " " + myCourse.getYear() );
      out.write("</font></i></b><br />\r\n");
      out.write("\t\t\t\t          <p><hr size=\"4\"/>\r\n");
      out.write("\t\t\t\t          <p></p>\r\n");
      out.write("\t\t\t\t          \r\n");
      out.write("\t\t\t\t          <!-- Search  -->\r\n");
      out.write("\t\t\t\t          <form class=\"form\" name = \"searchForm\">\r\n");
      out.write("\t\t\t\t          <input type=\"text\" name=\"searchTerm\">\r\n");
      out.write("\t\t\t\t          <button class=\"buttons search\" type=\"button\" onclick=\"searchStaff();\">Search Staff</button>\r\n");
      out.write("\t\t\t\t          <button class=\"buttons reset\" type=\"reset\" onclick=\"resetSearch();\">Clear Search</button>\r\n");
      out.write("\t\t\t\t          </form>\r\n");
      out.write("\t\t\t\t          \r\n");
      out.write("\t\t\t\t          <p><hr size=\"4\"/>\r\n");
      out.write("\t\t\t\t          <!-- End of Search -->\r\n");
      out.write("\t\t\t\t          \r\n");
      out.write("\t\t\t\t          <p>\r\n");
      out.write("\t\t\t\t\t\t  <table border=\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("                \t\t\t\t\t<th align=\"center\">Picture</th>\r\n");
      out.write("\t\t\t\t\t                <th align=\"center\">Professor</th>\r\n");
      out.write("\t\t\t\t\t                <th align=\"center\">Office</th>\r\n");
      out.write("\t\t\t\t\t                <th align=\"center\">Phone</th>\r\n");
      out.write("\t\t\t\t\t                <th align=\"center\">Email</th>\r\n");
      out.write("\t\t\t\t\t                <th align=\"center\">Office Hours</th>\r\n");
      out.write("              \t\t\t\t\t</tr>\r\n");
      out.write("              \t\t\t\t\t<!-- Professor's imformation -->\r\n");
      out.write("              \t\t\t\t\t");
	
	              					StaffMembers professor = null;
	              					List<StaffMembers> staffList = myCourse.getStaffMembers();
	              					for(int i = 0; i < staffList.size(); i++){
	              						if(staffList.get(i).getType().equals("instructor")){
	              							professor = staffList.get(i);
	              						}
	              					}
              					
      out.write("\r\n");
      out.write("              \t\t\t\t\t<tr>\r\n");
      out.write("              \t\t\t\t\t\t\r\n");
      out.write("              \t\t\t\t\t\t<td>\r\n");
      out.write("              \t\t\t\t\t\t\t<div class = \"");
      out.print( professor.getName().getFname().toLowerCase() + " " + professor.getName().getLname().toLowerCase() );
      out.write("\">\r\n");
      out.write("              \t\t\t\t\t\t\t\t<img class=\"pic\" width=\"100\" height=\"100\" src=");
      out.print(professor.getImage());
      out.write(" />\r\n");
      out.write("              \t\t\t\t\t\t\t</div>\r\n");
      out.write("              \t\t\t\t\t\t</td>\r\n");
      out.write("              \t\t\t\t\t\t<td>\r\n");
      out.write("              \t\t\t\t\t\t\t<div class = \"");
      out.print( professor.getName().getFname().toLowerCase() + " " + professor.getName().getLname().toLowerCase() );
      out.write("\">\r\n");
      out.write("              \t\t\t\t\t\t\t\t<font size=\"-1\">");
      out.print(professor.getName().getFname() + " " + professor.getName().getLname());
      out.write("</font>\r\n");
      out.write("              \t\t\t\t\t\t\t</div>\r\n");
      out.write("              \t\t\t\t\t\t</td>\r\n");
      out.write("              \t\t\t\t\t\t<td><font size=\"-1\">");
      out.print(professor.getOffice() );
      out.write("</font></td>\r\n");
      out.write("              \t\t\t\t\t\t<td><font size=\"-1\">");
      out.print(professor.getPhone() );
      out.write("</font></td>\r\n");
      out.write("              \t\t\t\t\t\t<td><font size=\"-1\">");
      out.print(professor.getEmail() );
      out.write("</font></td>\r\n");
      out.write("              \t\t\t\t\t\t<td><font size=\"-1\">\r\n");
      out.write("              \t\t\t\t\t\t");

              							List<OfficeHours> profHours; 
              							profHours = professor.getOfficeHours();
              							for(int i = 0; i < profHours.size(); i++){
              								Time t = profHours.get(i).getTime();
              								String day = profHours.get(i).getDay();
              								
      out.print( day + " " + t.getStart() + "-" + t.getEnd() );
      out.write("\r\n");
      out.write("              \t\t\t\t\t\t");

              								if(i!=profHours.size()-1){
              									
      out.write("<hr />");
 
              								}
              							}
              						
      out.write("\r\n");
      out.write("              \t\t\t\t\t\t</font></td>\r\n");
      out.write("              \t\t\t\t\t</tr>\t\t\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<!-- End of professor -->\t\r\n");
      out.write("\t\t\t\t\t\t<br />\t\r\n");
      out.write("\t\t\t\t\t\t<p><hr size=\"4\" />\r\n");
      out.write("\t\t\t\t\t\t<!--  Start of lecture Schedule -->\r\n");
      out.write("\t\t\t\t\t\t<b><font size=\"+1\">Lecture Schedule</font></b>\t\r\n");
      out.write("\t\t\t\t\t\t<table border=\"2\" cellpadding=\"5\" width=\"590\">\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<th align=\"center\">Sect. No.</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th align=\"center\">Day &amp; Time</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th align=\"center\">Room</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th>Lecture Assistant</th>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- Get lecture information -->\r\n");
      out.write("\t\t\t\t\t\t\t\t");

									List<Meetings> lectures = new ArrayList<Meetings>();
									for(int i = 0; i < myCourse.getMeetings().size(); i++){
										if(myCourse.getMeetings().get(i).getType().equals("lecture")){
											lectures.add(myCourse.getMeetings().get(i));
										}
									}
									
									//Looping over lecture only
									for(int i = 0; i < lectures.size(); i++){
										
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\"><font size=\"-1\">");
      out.print(lectures.get(i).getSection() );
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- Getting hours -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

											List<OfficeHours> lectureHours = lectures.get(i).getMeetingPeriods();
											
      out.write("<td align=\"center\"><font size=\"-1\">");

											for(int k = 0; k<lectureHours.size(); k++){
												Time t = lectureHours.get(k).getTime();
												
      out.print( lectureHours.get(k).getDay() +" " + t.getStart()+"-"+t.getEnd() );

												if(k!=lectureHours.size()-1){
													
      out.write(",<br />");

												}
											}
										
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td align=\"center\"><font size=\"-1\">");
      out.print( lectures.get(i).getRoom() );
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- Getting assitant -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
 
											StaffMembers assistant = null;
											String id = null;
											if(lectures.get(i).getAssistants()!=null){
												id = lectures.get(i).getAssistants().get(0).getStaffMemberID(); // only one for lecture
											}
						
											for(int j = 0; j < staffList.size(); j++){
												if(staffList.get(j).getId().equals(id)){
													assistant = staffList.get(j);
												}
											}
										
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
if(assistant !=null){
											if(assistant.getImage() == null){
												
      out.write("<td align=\"center\"><font size=\"-1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div class = \"");
      out.print( assistant.getName().getFname().toLowerCase() + " " + assistant.getName().getLname().toLowerCase());
      out.write("\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img class=\"pic\" src=");
      out.print( mySchool.getImage() );
      out.write(" /><br /><a href=");
      out.print("mailto:" + assistant.getEmail());
      out.write('>');
      out.print(assistant.getName().getFname() + " "+assistant.getName().getLname() );
      out.write("</a></font>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");

											}
											else{
												
      out.write("<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div class = \"");
      out.print( assistant.getName().getFname().toLowerCase() + " " + assistant.getName().getLname().toLowerCase());
      out.write("\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font size=\"-1\"><img class=\"pic\" src=");
      out.print( assistant.getImage() );
      out.write(" /><br /><a href=");
      out.print("mailto:" + assistant.getEmail());
      out.write('>');
      out.print(assistant.getName().getFname() + " "+assistant.getName().getLname() );
      out.write("</a></font>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");

											}
										}
										
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tr>\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

									}
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<!-- End of lecture -->\r\n");
      out.write("\t\t\t\t\t\t<!-- Start of lab schedule -->\r\n");
      out.write("\t\t\t\t\t\t<p><hr size=\"4\" /></p>\r\n");
      out.write("\t\t\t\t\t\t<b><font size=\"+1\">Lab Schedule</font></b>\r\n");
      out.write("\t\t\t\t\t\t<table border=\"2\" cellpadding=\"5\" width=\"590\">\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th align=\"center\">Sect. No.</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th align=\"center\">Day &amp; Time</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th align=\"center\">Room</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t<th align=\"center\">Lab Assistants</th>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- Creating Lab List -->\r\n");
      out.write("\t\t\t\t\t\t\t");

								List<Meetings> labList = new ArrayList<Meetings>();
								for(int i = 0; i < myCourse.getMeetings().size(); i++){
									if(myCourse.getMeetings().get(i).getType().equals("lab")){
										labList.add(myCourse.getMeetings().get(i));
									}
								}							
								for(int i=0; i<labList.size(); i++){
									
      out.write("<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td align=\"center\"><font size=\"-1\">");
      out.print(labList.get(i).getSection() );
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");

										List<OfficeHours> meetingPeriod = labList.get(i).getMeetingPeriods();
										
      out.write("<td align=\"center\"><font size=\"-1\">");

										for(int k =0; k<meetingPeriod.size(); k++){
											Time t = meetingPeriod.get(k).getTime();
											
      out.print( meetingPeriod.get(k).getDay() +" " + t.getStart()+"-"+t.getEnd() );

											if(k!=meetingPeriod.size()-1){
											
      out.write(",<br />");

											}
										}
									
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td align=\"center\"><font size=\"-1\">");
      out.print(labList.get(i).getRoom() );
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<table border=\"0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- Lab Assistants -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												List<StaffMembers> labStaff = new ArrayList<StaffMembers>();
												List<Assistant> assistants = labList.get(i).getAssistants();
												//Match lab assistant id with staff id
												for(int j = 0; j < assistants.size(); j++)
												{
													for(int z = 0; z<staffList.size();z++){
														if(staffList.get(z).getId().equals(assistants.get(j).getStaffMemberID())){
															labStaff.add(staffList.get(z));
														}
													}
												}
												for(int j = 0; j < labStaff.size(); j++){
													if(labStaff.get(j).getImage() == null){
														
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class = \"");
      out.print( labStaff.get(j).getName().getFname().toLowerCase() + " " + labStaff.get(j).getName().getLname().toLowerCase() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font size=\"-1\">\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img class=\"pic\" src=");
      out.print( mySchool.getImage() );
      out.write("><br /><a href=");
      out.print( "mailto:"+labStaff.get(j).getEmail() );
      out.write('>');
      out.print( labStaff.get(j).getName().getFname() +" " +labStaff.get(j).getName().getLname()  );
      out.write("</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</font>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t");

													}
													else{
														
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class = \"");
      out.print( labStaff.get(j).getName().getFname().toLowerCase() + " " + labStaff.get(j).getName().getLname().toLowerCase() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font size=\"-1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img class=\"pic\" src=");
      out.print( labStaff.get(j).getImage() );
      out.write("><br /><a href=");
      out.print( "mailto:"+labStaff.get(j).getEmail() );
      out.write('>');
      out.print(labStaff.get(j).getName().getFname() +" " +labStaff.get(j).getName().getLname() );
      out.write("</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</font>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t");

													}
												}
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t<!-- End of Lab Assistant -->\r\n");
      out.write("\t\t\t\t\t\t<!-- Start of Office Hours -->\r\n");
      out.write("\t\t\t\t\t\t<br /><hr size=\"4\" /><br />\r\n");
      out.write("\t\t\t\t\t\t\t<b><font size=\"+1\">Office Hours</font></b> - All staff office hours are held in the SAL Open Lab. Prof. ");
      out.print(professor.getName().getLname() );
      out.write("'s office hours are listed above.<br />\r\n");
      out.write("\t\t\t\t\t\t\t<table border =\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>10:00a.m.-12:00p.m.</th>\r\n");
      out.write("\t\t\t\t\t                <th>12:00p.m.-2:00p.m.</th>\r\n");
      out.write("\t\t\t\t\t                <th>2:00p.m.-4:00p.m.</th>\r\n");
      out.write("\t\t\t\t\t                <th>4:00p.m.-6:00p.m.</th>\r\n");
      out.write("\t\t\t\t\t                <th>6:00p.m.-8:00p.m.</th>\r\n");
      out.write("\t\t\t\t\t            </tr>\r\n");
      out.write("\t\t\t\t\t            <!-- Ordering the office hours  -->\r\n");
      out.write("\t\t\t\t\t            ");

					            	//Initialize to null
					            	StaffMembers[][] officeHours = new StaffMembers[5][6];	
					            	for(int i = 0 ; i < 5; i++){
					            		for(int j = 0; j<6; j++){
					            			officeHours[i][j] = null;
					            		}
					            	}
					            
					            	//Fit stall to proper slot
						            for(int i = 0; i < staffList.size(); i++){
					            		List<OfficeHours> oh = new ArrayList<OfficeHours>();
					            		//Exclude professor
					            		if(staffList.get(i).getType()!="instructor" && staffList.get(i).getOfficeHours()!=null){
					            			oh = staffList.get(i).getOfficeHours();
					            		}
					            		//Check all office hour and put into appropriate position
					            		for(int j = 0; j < oh.size(); j++){
					            			if(oh.get(j).getDay().equals("Monday")){
					            				if(oh.get(j).getTime().getStart().equals("10:00a.m.")){
					            					officeHours[0][0] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("12:00p.m.")){
					            					officeHours[1][0] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("2:00p.m.")){
					            					officeHours[2][0] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("4:00p.m.")){
					            					officeHours[3][0] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("6:00p.m.")){
					            					officeHours[4][0] = staffList.get(i);
					            				}
					            			}
					            			else if(oh.get(j).getDay().equals("Tuesday")){
					            				if(oh.get(j).getTime().getStart().equals("10:00a.m.")){
					            					officeHours[0][1] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("12:00p.m.")){
					            					officeHours[1][1] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("2:00p.m.")){
					            					officeHours[2][1] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("4:00p.m.")){
					            					officeHours[3][1] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("6:00p.m.")){
					            					officeHours[4][1] = staffList.get(i);
					            				}
					            			}
					            			else if(oh.get(j).getDay().equals("Wednesday")){
					            				if(oh.get(j).getTime().getStart().equals("10:00a.m.")){
					            					officeHours[0][2] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("12:00p.m.")){
					            					officeHours[1][2] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("2:00p.m.")){
					            					officeHours[2][2] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("4:00p.m.")){
					            					officeHours[3][2] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("6:00p.m.")){
					            					officeHours[4][2] = staffList.get(i);
					            				}
					            			}
					            			else if(oh.get(j).getDay().equals("Thursday")){
					            				if(oh.get(j).getTime().getStart().equals("10:00a.m.")){
					            					officeHours[0][3] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("12:00p.m.")){
					            					officeHours[1][3] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("2:00p.m.")){
					            					officeHours[2][3] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("4:00p.m.")){
					            					officeHours[3][3] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("6:00p.m.")){
					            					officeHours[4][3] = staffList.get(i);
					            				}
					            			}
					            			else if(oh.get(j).getDay().equals("Friday")){
					            				if(oh.get(j).getTime().getStart().equals("10:00a.m.")){
					            					officeHours[0][4] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("12:00p.m.")){
					            					officeHours[1][4] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("2:00p.m.")){
					            					officeHours[2][4] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("4:00p.m.")){
					            					officeHours[3][4] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("6:00p.m.")){
					            					officeHours[4][4] = staffList.get(i);
					            				}
					            			}
					            			else if(oh.get(j).getDay().equals("Saturday")){
					            				if(oh.get(j).getTime().getStart().equals("10:00a.m.")){
					            					officeHours[0][5] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("12:00p.m.")){
					            					officeHours[1][5] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("2:00p.m.")){
					            					officeHours[2][5] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("4:00p.m.")){
					            					officeHours[3][5] = staffList.get(i);
					            				}
					            				else if(oh.get(j).getTime().getStart().equals("6:00p.m.")){
					            					officeHours[4][5] = staffList.get(i);
					            				}
					            			}
					            		}
					            	}
					            
      out.write("\r\n");
      out.write("\t\t\t\t\t            <!-- Putting office hour into table -->\r\n");
      out.write("\t\t\t\t\t            ");

					            	//List of day to match loop
					            	List<String> days = new ArrayList<String>();
					            	days.add("Monday");
					            	days.add("Tuesday");
					            	days.add("Wednesday");
					            	days.add("Thursday");
					            	days.add("Friday");
					            	days.add("Saturday");
					            	for(int i = 0; i < 6; i++){
					            		
      out.write("<tr>\r\n");
      out.write("\t\t\t\t\t            \t\t<th>");
      out.print( days.get(i) );
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t            \t\t");
 for(int j = 0; j < 5; j++){            			
					            			
      out.write("<td>");
 if(officeHours[j][i]!=null){
					            				
      out.write("\r\n");
      out.write("\t\t\t\t\t            \t\t\t\t\t<div class=\"");
      out.print(officeHours[j][i].getName().getFname().toLowerCase() +" "+officeHours[j][i].getName().getLname().toLowerCase() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t            \t\t\t\t\t\t<img class=\"pic\" src=");
      out.print( officeHours[j][i].getImage());
      out.write(" /><br />\r\n");
      out.write("\t\t\t\t\t            \t\t\t\t\t\t<font size=\"-1\"><a href=");
      out.print( "mailto:"+ officeHours[j][i].getEmail() );
      out.write('>');
      out.print( officeHours[j][i].getName().getFname() + " " + officeHours[j][i].getName().getLname() );
      out.write("</a><br />&nbsp;\r\n");
      out.write("\t\t\t\t\t            \t\t\t\t\t\t</font>\r\n");
      out.write("\t\t\t\t\t            \t\t\t\t\t</div> </td>");

					            			}
					            			//Case if no img avialble
					            			else{
					            				
      out.write("<img class=\"pic\" src=");
      out.print( mySchool.getImage());
      out.write(" /><br />\r\n");
      out.write("\t\t\t\t\t            \t\t\t\t<font size=\"-1\">No Staff Available<br />&nbsp;</font></td>");

					            			}
					            		}
					            	}
					            
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</table>\t\r\n");
      out.write("\t\t\t\t\t\t\t<!-- End of Office Hours -->\t\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<!-- End of Center-->\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
